/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class dcmpi_DCMPIJarClassLoader */

#ifndef _Included_dcmpi_DCMPIJarClassLoader
#define _Included_dcmpi_DCMPIJarClassLoader
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class dcmpi_JarResources */

#ifndef _Included_dcmpi_JarResources
#define _Included_dcmpi_JarResources
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class dcmpi_JarClassLoader */

#ifndef _Included_dcmpi_JarClassLoader
#define _Included_dcmpi_JarClassLoader
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class dcmpi_MultiClassLoader */

#ifndef _Included_dcmpi_MultiClassLoader
#define _Included_dcmpi_MultiClassLoader
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class dcmpi_DCBuffer */

#ifndef _Included_dcmpi_DCBuffer
#define _Included_dcmpi_DCBuffer
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     dcmpi_DCBuffer
 * Method:    AppendByte
 * Signature: (B)V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCBuffer_AppendByte
  (JNIEnv *, jobject, jbyte);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    AppendByteArray
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCBuffer_AppendByteArray
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    AppendInt
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCBuffer_AppendInt
  (JNIEnv *, jobject, jint);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    AppendLong
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCBuffer_AppendLong
  (JNIEnv *, jobject, jlong);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    AppendFloat
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCBuffer_AppendFloat
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    AppendDouble
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCBuffer_AppendDouble
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    AppendString
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCBuffer_AppendString
  (JNIEnv *, jobject, jstring);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    ExtractByte
 * Signature: ()B
 */
JNIEXPORT jbyte JNICALL Java_dcmpi_DCBuffer_ExtractByte
  (JNIEnv *, jobject);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    ExtractByteArray
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_dcmpi_DCBuffer_ExtractByteArray
  (JNIEnv *, jobject, jint);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    ExtractInt
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_dcmpi_DCBuffer_ExtractInt
  (JNIEnv *, jobject);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    ExtractLong
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_dcmpi_DCBuffer_ExtractLong
  (JNIEnv *, jobject);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    ExtractFloat
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_dcmpi_DCBuffer_ExtractFloat
  (JNIEnv *, jobject);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    ExtractDouble
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_dcmpi_DCBuffer_ExtractDouble
  (JNIEnv *, jobject);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    ExtractString
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_dcmpi_DCBuffer_ExtractString
  (JNIEnv *, jobject);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    OverwriteInt
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCBuffer_OverwriteInt
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    consume
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCBuffer_consume
  (JNIEnv *, jobject);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    initIDs
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCBuffer_initIDs
  (JNIEnv *, jclass);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    construct
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCBuffer_construct
  (JNIEnv *, jobject, jint);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    handoff
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCBuffer_handoff
  (JNIEnv *, jobject, jlong);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    writeToDisk
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCBuffer_writeToDisk
  (JNIEnv *, jobject, jstring);

/*
 * Class:     dcmpi_DCBuffer
 * Method:    readFromDisk
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCBuffer_readFromDisk
  (JNIEnv *, jobject, jstring);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class dcmpi_DCFilter */

#ifndef _Included_dcmpi_DCFilter
#define _Included_dcmpi_DCFilter
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     dcmpi_DCFilter
 * Method:    read
 * Signature: (Ljava/lang/String;)Ldcmpi/DCBuffer;
 */
JNIEXPORT jobject JNICALL Java_dcmpi_DCFilter_read
  (JNIEnv *, jobject, jstring);

/*
 * Class:     dcmpi_DCFilter
 * Method:    read_until_upstream_exit
 * Signature: (Ljava/lang/String;)Ldcmpi/DCBuffer;
 */
JNIEXPORT jobject JNICALL Java_dcmpi_DCFilter_read_1until_1upstream_1exit
  (JNIEnv *, jobject, jstring);

/*
 * Class:     dcmpi_DCFilter
 * Method:    readany
 * Signature: ()Ldcmpi/DCBuffer;
 */
JNIEXPORT jobject JNICALL Java_dcmpi_DCFilter_readany
  (JNIEnv *, jobject);

/*
 * Class:     dcmpi_DCFilter
 * Method:    read_nonblocking
 * Signature: (Ljava/lang/String;)Ldcmpi/DCBuffer;
 */
JNIEXPORT jobject JNICALL Java_dcmpi_DCFilter_read_1nonblocking
  (JNIEnv *, jobject, jstring);

/*
 * Class:     dcmpi_DCFilter
 * Method:    write
 * Signature: (Ldcmpi/DCBuffer;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCFilter_write
  (JNIEnv *, jobject, jobject, jstring);

/*
 * Class:     dcmpi_DCFilter
 * Method:    has_param
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_dcmpi_DCFilter_has_1param
  (JNIEnv *, jobject, jstring);

/*
 * Class:     dcmpi_DCFilter
 * Method:    get_param
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_dcmpi_DCFilter_get_1param
  (JNIEnv *, jobject, jstring);

/*
 * Class:     dcmpi_DCFilter
 * Method:    get_bind_host
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_dcmpi_DCFilter_get_1bind_1host
  (JNIEnv *, jobject);

/*
 * Class:     dcmpi_DCFilter
 * Method:    get_init_filter_broadcast
 * Signature: ()Ldcmpi/DCBuffer;
 */
JNIEXPORT jobject JNICALL Java_dcmpi_DCFilter_get_1init_1filter_1broadcast
  (JNIEnv *, jobject);

/*
 * Class:     dcmpi_DCFilter
 * Method:    write_broadcast
 * Signature: (Ldcmpi/DCBuffer;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCFilter_write_1broadcast
  (JNIEnv *, jobject, jobject, jstring);

/*
 * Class:     dcmpi_DCFilter
 * Method:    initIDs
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCFilter_initIDs
  (JNIEnv *, jclass);

/*
 * Class:     dcmpi_DCFilter
 * Method:    handoff
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_dcmpi_DCFilter_handoff
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class dcmpi_Loader */

#ifndef _Included_dcmpi_Loader
#define _Included_dcmpi_Loader
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
