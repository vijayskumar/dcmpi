#!/usr/bin/env python
import string, sys, os, os.path, traceback, socket

def which(filename):
    import os, string, stat
    if not os.environ.has_key('PATH') or os.environ['PATH'] == '':
        p = os.defpath
    else:
        p = os.environ['PATH']
    pathlist = string.split(p, os.pathsep)
    for path in pathlist:
        f = os.path.join(path, filename)
        if os.access(f, os.X_OK) and not stat.S_ISDIR(os.stat(f)[stat.ST_MODE]):
            return f
    return None

__safe_chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
def shell_quote(s):
    """Quote s so that it is safe for all common shells.
    """
    res = []
    for c in s:
        if c in __safe_chars:
            res.append(c)
        else:
            res.append("=%02x" % ord(c))
    return string.join(res, '')
    
def shell_unquote(s):
    """Unquote a string quoted by shell_quote.
    """
    if s == "":
        return ""

    frags = string.split(s, "=")
    res = [frags[0]]
    for f in frags[1:]:
        res.append(chr(string.atoi(f[:2], 0x10)))
        res.append(f[2:])
    return string.join(res, '')

#print 'in:', sys.argv
wrapper = None
wrapperhosts = None
for n in range(len(sys.argv)):
    if sys.argv[n] == "-wrapper":
        wrapper = shell_unquote(sys.argv[n+1]).split()
    elif sys.argv[n] == "-wrapperhosts":
        wrapperhosts = shell_unquote(sys.argv[n+1]).split(',')

sys.argv[0] = os.path.join(os.path.dirname(sys.argv[0]), 'dcmpiruntime-socket')
sys.argv.insert(1, '-rank')
sys.argv.insert(2, '0')
if wrapper:
    if (not wrapperhosts or socket.gethostname() in wrapperhosts):
        wrapper[0] = which(wrapper[0])
        sys.argv = wrapper + sys.argv
#print 'out:', sys.argv
try:
    os.execl(sys.argv[0], *sys.argv)
except Exception:
    traceback.print_exc()
    sys.exit(1)
